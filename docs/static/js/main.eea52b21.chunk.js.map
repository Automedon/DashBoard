{"version":3,"sources":["components/Header.js","containers/HomeTab.js","redux/actions/dashBoardActions.js","redux/types.js","components/DashBoard.js","App.js","serviceWorker.js","redux/reducers/dashBoardReducer.js","redux/reducers/index.js","store.js","index.js"],"names":["Wrapper","styled","section","Header","className","aria-hidden","div","validationSchema1","yup","shape","userName","required","min","max","email","password","confirmPassword","oneOf","validationSchema2","street","houseNumber","postalCode","country","Tab","props","active","Item","AntdForm","ItemFlex","formItemLayout","labelCol","span","wrapperCol","tailLayout","offset","FieldInput","placeholder","label","style","useField","field","meta","errorText","error","touched","validateStatus","help","hasFeedback","id","defaultValue","FieldPassword","Password","PasswordLine","connect","state","dash","changeMainInf","type","payload","changeAddInf","useRouteMatch","path","url","pathname","useLocation","to","exact","width","initialValues","validationSchema","onSubmit","a","Promise","resolve","setTimeout","alert","JSON","stringify","values","isSubmitting","handleSubmit","onFinish","name","marginBottom","length","htmlType","disabled","menu","icon","DashBoard","renderMenu","map","key","render","App","Boolean","window","location","hostname","match","initState","combineReducers","action","createStore","reducer","ReactDOM","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.eea52b21.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.section`\r\n  padding: 30px 0;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  background: rgb(220, 224, 96);\r\n  background: linear-gradient(\r\n    90deg,\r\n    rgba(220, 224, 96, 1) 0%,\r\n    rgba(42, 119, 103, 1) 100%\r\n  );\r\n  box-shadow: 0px 3px 3px -1px rgba(0, 0, 0, 0.75);\r\n  div.text {\r\n    padding-left: 5%;\r\n    color: #0b746d;\r\n    font-weight: 800;\r\n    font-size: 20px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-evenly;\r\n    span.g {\r\n      color: #d3a30f;\r\n    }\r\n    span.loft {\r\n      font-size: 11px;\r\n      border: 2px solid #0b746d;\r\n      margin-left: 3px;\r\n    }\r\n  }\r\n  div.icons {\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n    padding-right: 5%;\r\n    max-width: 100%;\r\n    color: white;\r\n    i {\r\n      color: white;\r\n      padding: 0 10px;\r\n      cursor: pointer;\r\n      span {\r\n        padding-left: 5px;\r\n      }\r\n      div.yellowCircle {\r\n        height: 5px;\r\n        width: 5px;\r\n        background-color: orange;\r\n        border: 1px solid white;\r\n        border-radius: 50%;\r\n        position: relative;\r\n        left: 12px;\r\n        top: -5px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"text\">\r\n        ENER <span className=\"g\">G</span>IE <span className=\"loft\">LOFT</span>\r\n      </div>\r\n      <div className=\"icons\">\r\n        <i className=\"fa fa-globe\" aria-hidden=\"true\">\r\n          <span>EN</span>\r\n        </i>\r\n\r\n        <i className=\"fa fa-envelope\">\r\n          <div className=\"yellowCircle\" />\r\n        </i>\r\n\r\n        <i className=\"fa fa-bell\">\r\n          <div className=\"yellowCircle\" />\r\n        </i>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeAddInf, changeMainInf } from \"../redux/actions/dashBoardActions\";\r\nimport { Formik, useField } from \"formik\";\r\nimport { Button, Form as AntdForm, Input } from \"antd\";\r\nimport * as yup from \"yup\";\r\nimport {\r\n  Link,\r\n  Route,\r\n  useRouteMatch,\r\n  Switch,\r\n  useLocation\r\n} from \"react-router-dom\";\r\n\r\nconst Wrapper = styled.div`\r\n  min-height: 480px;\r\n  margin-left: 10px;\r\n  width: 500px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  align-items: center;\r\n  background-color: white;\r\n  @media (max-width: 700px) {\r\n    width: 325px;\r\n  }\r\n  div.tabs {\r\n    width: 100%;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-evenly;\r\n    align-items: self-start;\r\n    a {\r\n      width: 100%;\r\n    }\r\n  }\r\n  div.fields {\r\n    width: 100%;\r\n    padding: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    align-items: flex-start;\r\n  }\r\n`;\r\n\r\nconst validationSchema1 = yup.object().shape({\r\n  userName: yup\r\n    .string()\r\n    .required(\"User Name required\")\r\n    .min(3)\r\n    .max(10),\r\n  email: yup.string().email(),\r\n  password: yup\r\n    .string()\r\n    .min(3)\r\n    .required(\"Password is required\"),\r\n  confirmPassword: yup\r\n    .string()\r\n    .oneOf([yup.ref(\"password\"), null], \"Passwords do not match\")\r\n    .required(\"Password confirm is required\")\r\n});\r\nconst validationSchema2 = yup.object().shape({\r\n  street: yup.string().required(),\r\n  houseNumber: yup.string().required(),\r\n  postalCode: yup.string().required(),\r\n  country: yup.string().required()\r\n});\r\n\r\nconst Tab = styled.div`\r\n  width: 100%;\r\n  background-color: ${props => (props.active ? \"white\" : \"#d8d8d8\")};\r\n  cursor: pointer;\r\n  color: black;\r\n  text-align: center;\r\n  a {\r\n    text-decoration: unset;\r\n    color: black;\r\n  }\r\n`;\r\n\r\nconst Item = styled(AntdForm.Item)`\r\n  margin-bottom: 0;\r\n`;\r\nconst ItemFlex = styled(AntdForm.Item)`\r\n  margin-bottom: 0;\r\n  display: flex;\r\n  justify-content: flex-end;\r\n`;\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    span: 10\r\n  },\r\n  wrapperCol: {\r\n    span: 14\r\n  }\r\n};\r\n\r\nconst tailLayout = {\r\n  wrapperCol: {\r\n    offset: 10,\r\n    span: 14\r\n  }\r\n};\r\nconst FieldInput = ({ placeholder, label, style, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\r\n  const validateStatus = meta.error && meta.touched ? \"error\" : \"success\";\r\n  return (\r\n    <Item\r\n      {...field}\r\n      style={style}\r\n      label={label}\r\n      help={errorText}\r\n      validateStatus={validateStatus}\r\n      hasFeedback={meta.touched}\r\n    >\r\n      <Input\r\n        placeholder={placeholder}\r\n        id={label}\r\n        defaultValue={props.defaultValue}\r\n      />\r\n    </Item>\r\n  );\r\n};\r\nconst FieldPassword = ({ placeholder, label, style, ...props }) => {\r\n  const [field, meta] = useField(props);\r\n  const errorText = meta.error && meta.touched ? meta.error : \"\";\r\n  const validateStatus = meta.error && meta.touched ? \"error\" : \"success\";\r\n\r\n  return (\r\n    <Item\r\n      {...field}\r\n      style={style}\r\n      label={label}\r\n      help={errorText}\r\n      validateStatus={validateStatus}\r\n      hasFeedback={meta.touched}\r\n    >\r\n      <Input.Password\r\n        placeholder={placeholder}\r\n        id={label}\r\n        defaultValue={props.defaultValue}\r\n      />\r\n    </Item>\r\n  );\r\n};\r\n\r\nconst PasswordLine = styled.div`\r\n  width: 15px;\r\n  height: 4px;\r\n  margin-left: 5px;\r\n  display: inline-flex;\r\n  background-color: ${props => (props.active ? \"green\" : \"red\")};\r\n  border: 1px solid gray;\r\n`;\r\n\r\nconst HomeTab = props => {\r\n  const {\r\n    userName,\r\n    email,\r\n    password,\r\n    confirmPassword,\r\n    street,\r\n    houseNumber,\r\n    postalCode,\r\n    country\r\n  } = props.dash;\r\n  const MainInfo = () => {\r\n    return (\r\n      <div className=\"fields\">\r\n        <div style={{ width: \"100%\" }}>\r\n          <Formik\r\n            initialValues={{\r\n              userName,\r\n              email,\r\n              password,\r\n              confirmPassword\r\n            }}\r\n            validationSchema={validationSchema1}\r\n            onSubmit={async ({\r\n              userName,\r\n              email,\r\n              password,\r\n              confirmPassword\r\n            }) => {\r\n              await new Promise(resolve => setTimeout(resolve, 2000));\r\n              alert(\r\n                JSON.stringify(\r\n                  { userName, email, password, confirmPassword },\r\n                  null,\r\n                  2\r\n                )\r\n              );\r\n              props.changeMainInf(userName, email, password, confirmPassword);\r\n            }}\r\n          >\r\n            {({ values, isSubmitting, handleSubmit }) => (\r\n              <AntdForm {...formItemLayout} onFinish={handleSubmit}>\r\n                <FieldInput\r\n                  placeholder={\"UserName\"}\r\n                  label={\"User Name\"}\r\n                  name={\"userName\"}\r\n                  defaultValue={values.userName}\r\n                />\r\n                <FieldInput\r\n                  placeholder={\"Email\"}\r\n                  name={\"email\"}\r\n                  label={\"Email\"}\r\n                  defaultValue={values.email}\r\n                />\r\n                <FieldPassword\r\n                  placeholder={\"Password\"}\r\n                  name={\"password\"}\r\n                  label={\"Password\"}\r\n                  style={{ marginBottom: \"0!important\" }}\r\n                  defaultValue={values.password}\r\n                />\r\n                <ItemFlex>\r\n                  <PasswordLine active={values.password.length > 2} />\r\n                  <PasswordLine active={values.password.length > 4} />\r\n                  <PasswordLine active={values.password.length > 6} />\r\n                  <PasswordLine active={values.password.length > 8} />\r\n                  <PasswordLine active={values.password.length > 10} />\r\n                </ItemFlex>\r\n                <FieldPassword\r\n                  placeholder={\"Repeat Password\"}\r\n                  name={\"confirmPassword\"}\r\n                  label={\"Confirm Password\"}\r\n                  defaultValue={values.confirmPassword}\r\n                />\r\n\r\n                <Item {...tailLayout}>\r\n                  <Button htmlType=\"submit\" disabled={isSubmitting}>\r\n                    Update\r\n                  </Button>\r\n                </Item>\r\n              </AntdForm>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  const AddInfo = () => {\r\n    return (\r\n      <div className=\"fields\">\r\n        <div style={{ width: \"100%\" }}>\r\n          <Formik\r\n            initialValues={{\r\n              street,\r\n              houseNumber,\r\n              postalCode,\r\n              country\r\n            }}\r\n            validationSchema={validationSchema2}\r\n            onSubmit={async ({ street, houseNumber, postalCode, country }) => {\r\n              await new Promise(resolve => setTimeout(resolve, 2000));\r\n              alert(\r\n                JSON.stringify(\r\n                  { street, houseNumber, postalCode, country },\r\n                  null,\r\n                  2\r\n                )\r\n              );\r\n              props.changeAddInf(street, houseNumber, postalCode, country);\r\n            }}\r\n          >\r\n            {({ values, isSubmitting, handleSubmit }) => (\r\n              <AntdForm {...formItemLayout} onFinish={handleSubmit}>\r\n                <FieldInput\r\n                  placeholder={\"Street\"}\r\n                  label={\"Street\"}\r\n                  name={\"street\"}\r\n                  defaultValue={values.street}\r\n                />\r\n                <FieldInput\r\n                  placeholder={\"House Number\"}\r\n                  label={\"House Number\"}\r\n                  name={\"houseNumber\"}\r\n                  defaultValue={values.houseNumber}\r\n                />\r\n                <FieldInput\r\n                  placeholder={\"Postal Code\"}\r\n                  label={\"Postal Code\"}\r\n                  name={\"postalCode\"}\r\n                  defaultValue={values.postalCode}\r\n                />\r\n                <FieldInput\r\n                  placeholder={\"Country\"}\r\n                  label={\"Country\"}\r\n                  name={\"country\"}\r\n                  defaultValue={values.country}\r\n                />\r\n\r\n                <Item {...tailLayout}>\r\n                  <Button htmlType=\"submit\" disabled={isSubmitting}>\r\n                    Update\r\n                  </Button>\r\n                </Item>\r\n              </AntdForm>\r\n            )}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n  let { path, url } = useRouteMatch();\r\n  let { pathname } = useLocation();\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"tabs\">\r\n        <Link to={`${url}`}>\r\n          <Tab active={pathname === `${url}`}>Main Information</Tab>\r\n        </Link>\r\n        <Link to={`${url}/Add`}>\r\n          <Tab active={pathname === `${url}/Add`}>Additional Information</Tab>\r\n        </Link>\r\n      </div>\r\n      <Switch>\r\n        <Route exact path={`${path}`}>\r\n          <MainInfo />\r\n        </Route>\r\n        <Route exact path={`${path}/Add`}>\r\n          <AddInfo />\r\n        </Route>\r\n      </Switch>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nconst mapProps = state => {\r\n  return {\r\n    dash: state.dash\r\n  };\r\n};\r\n\r\nexport default connect(mapProps, { changeMainInf, changeAddInf })(HomeTab);\r\n","import { CHANGE_ADDINF, CHANGE_MAIN } from \"../types\";\r\n\r\nexport const changeMainInf = (userName, email, password, confirmPassword) => {\r\n  return {\r\n    type: CHANGE_MAIN,\r\n    payload: {\r\n      userName,\r\n      email,\r\n      password,\r\n      confirmPassword\r\n    }\r\n  };\r\n};\r\n\r\nexport const changeAddInf = (street, houseNumber, postalCode, country) => {\r\n  return {\r\n    type: CHANGE_ADDINF,\r\n    payload: {\r\n      street,\r\n      houseNumber,\r\n      postalCode,\r\n      country\r\n    }\r\n  };\r\n};\r\n","export const CHANGE_MAIN = \"CHANGE_MAIN\";\r\nexport const CHANGE_ADDINF = \"CHANGE_ADDINF\";\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {Link, Redirect, Route, Switch} from \"react-router-dom\";\r\nimport HomeTab from \"../containers/HomeTab\";\r\n\r\nconst Wrapper = styled.section`\r\n  max-width: 100%;\r\n  margin: 10% 10%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: flex-start;\r\n  justify-content: center;\r\n  @media (max-width: 700px) {\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin: 0 auto;\r\n  }\r\n  div.menu {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-evenly;\r\n    align-items: self-start;\r\n    @media (max-width: 700px) {\r\n      width: 100%;\r\n      margin-bottom: 20px;\r\n      align-items: center;\r\n    }\r\n    div.oneMenu {\r\n      padding-top: 10px;\r\n      min-width: 120px;\r\n      i {\r\n        width: 19px;\r\n        margin-right: 10px;\r\n      }\r\n      a {\r\n        color: black;\r\n        text-decoration: unset;\r\n        &:hover {\r\n          opacity: 0.5;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  div.dashboard {\r\n    margin-left: 10px;\r\n  }\r\n`;\r\n\r\nconst menu = [\r\n  { name: \"Home\", icon: \"fa fa-home\" },\r\n  { name: \"My Account\", icon: \"fa fa-bullhorn\" },\r\n  { name: \"My Company\", icon: \"fa fa-building\" },\r\n  { name: \"My Settings\", icon: \"fa fa-cog\" },\r\n  { name: \"News\", icon: \"fa fa-newspaper-o\" },\r\n  { name: \"Analytics\", icon: \"fa fa-area-chart\" }\r\n];\r\n\r\nconst DashBoard = () => {\r\n  const renderMenu = menu.map(({ name, icon }) => (\r\n    <div className=\"oneMenu\" key={name + icon}>\r\n      <i className={icon} />\r\n      <Link to={name}>{name}</Link>\r\n    </div>\r\n  ));\r\n  return (\r\n    <Wrapper>\r\n      <div className=\"menu\">{renderMenu}</div>\r\n      <div className=\"dashboard\">\r\n        <Switch>\r\n            <Route exact path=\"/DashBoard\" render={() => (\r\n                <Redirect to=\"/DashBoard/Home\"/>\r\n            )}/>\r\n          <Route path=\"/DashBoard/Home\">\r\n            <HomeTab />\r\n          </Route>\r\n          <Route>\r\n            <div>Under construction...</div>\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default DashBoard;\r\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Header from \"./components/Header\";\nimport DashBoard from \"./components/DashBoard\";\n\nconst Wrapper = styled.section`\n  min-width: 100%;\n  background-color: #f3f3f3;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n`;\n\nfunction App() {\n  return (\n    <Wrapper>\n      <Header />\n      <DashBoard />\n    </Wrapper>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { CHANGE_ADDINF, CHANGE_MAIN } from \"../types\";\r\n\r\nconst initState = {\r\n  userName: \"Default\",\r\n  email: \"default@gmail.com\",\r\n  password: \"12345\",\r\n  confirmPassword: \"12345\",\r\n  street: \"Baverly\",\r\n  houseNumber: \"42\",\r\n  postalCode: \"100010\",\r\n  country: \"USA\"\r\n};\r\n\r\nexport default (state = initState, action) => {\r\n  switch (action.type) {\r\n    case CHANGE_MAIN: {\r\n      const { userName, email, password, confirmPassword } = action.payload;\r\n      return { userName, email, password, confirmPassword, ...state };\r\n    }\r\n    case CHANGE_ADDINF: {\r\n      const { street, houseNumber, postalCode, country } = action.payload;\r\n      return { street, houseNumber, postalCode, country, ...state };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport dashBoardReducer from \"./dashBoardReducer\";\r\n\r\nexport default combineReducers({\r\n  dash: dashBoardReducer\r\n});\r\n","import { createStore } from \"redux\";\r\nimport reducer from \"./redux/reducers/index\";\r\n\r\nexport default createStore(reducer);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport store from \"./store\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}